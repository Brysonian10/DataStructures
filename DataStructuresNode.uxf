<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>540</x>
      <y>0</y>
      <w>288</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>bg=green
Node&lt;Type&gt;

--
- data : Type
- next : Node&lt;Type&gt;

--
+Node() : constructor
+Node&lt;Type&gt;(Type) : constructor

+getData() : Type
+setData(Type) : void
+setNext() : Node&lt;Type&gt; *
+setNext(Node&lt;Type&gt;*) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>315</x>
      <y>270</y>
      <w>378</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>bg=red
LinearNode&lt;Type&gt;

--
- Next : Node&lt;Type&gt;

--
LinearNode&lt;Type&gt;(Type) : constructor
LinearNode&lt;Type&gt;(Type, LinearNode&lt;Type&gt;) : constructor

+getNext() : Node&lt;Type&gt; *
+setNext(Node&lt;Type&gt; *) : void



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1143</x>
      <y>36</y>
      <w>288</w>
      <h>207</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;

--
- size : int 
- internalArray : Type*

--
+ Array&lt;Type&gt;(int) : constructor
+ Array&lt;Type&gt;(Array&lt;Type&gt;) : constructor
+ getSize() : int
+ setAtIndex(int, Type) : void
+ getFromIndex(int) : Type
+ operator [ ]
+ operator = Array&lt;Type&gt;&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>207</y>
      <w>216</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>234</x>
      <y>666</y>
      <w>243</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>LinkedList&lt;Type&gt;
--
- front : LinearNode&lt;Type&gt; *
- end : LinearNode&lt;Type&gt; *
--
*List Structure methods*
+ getFromIndex(int) : Type
+ add(Type) : void
+ addAtIndex(int, Type) : void
+ remove(int) : Type
+ contains(Type) : bool
+ setAtIndex(int, Type) : Type

*ListAccessors*
+ getSize() : int
+ getFront() : LinearNode&lt;Type&gt;*
+ getend() : LinearNode&lt;Type&gt;*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>90</x>
      <y>954</y>
      <w>252</w>
      <h>324</h>
    </coordinates>
    <panel_attributes>Queue&lt;Type&gt;
--

--
+ Queue() : constructor
+ ~Queue() : destructor
*Queue Methods*
+ enqueue(Type) : void
+ dequeue() : Type
+ peek() : Type

*List Structure methods*
+ getFromIndex(int) : Type
+ add(Type) : void
+ addAtIndex(int, Type) : void
+ remove(int) : Type
+ contains(Type) : bool
+ setAtIndex(int, Type) : Type

*ListAccessors*
+ getSize() : int
+ getFront() : LinearNode&lt;Type&gt;*
+ getend() : LinearNode&lt;Type&gt;*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>405</x>
      <y>954</y>
      <w>261</w>
      <h>324</h>
    </coordinates>
    <panel_attributes>Stack&lt;Type&gt;
--

--
+ Stack() : constructor
+ ~Stack() : destructor
*Stack Methods*
+ push(Type) : void
+ pop() : Type
+ peek() : Type

*List Structure methods*
+ getFromIndex(int) : Type
+ add(Type) : void
+ addAtIndex(int, Type) : void
+ remove(int) : Type
+ contains(Type) : bool
+ setAtIndex(int, Type) : Type

*ListAccessors*
+ getSize() : int
+ getFront() : LinearNode&lt;Type&gt;*
+ getend() : LinearNode&lt;Type&gt;*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>351</x>
      <y>639</y>
      <w>45</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>135</x>
      <y>909</y>
      <w>207</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>423</x>
      <y>909</y>
      <w>63</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>432</x>
      <y>423</y>
      <w>108</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>927</x>
      <y>621</y>
      <w>207</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>Music
--
-Too Many
--
+Music() : constructor
+Music(string) : constructor
+getXXX() : various
+ == : bool
+ &lt;&lt; : ostream
+ &lt; : bool
+ &gt; : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1170</x>
      <y>621</y>
      <w>207</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>CrimeData
--
-Too Many
--
+CrimeData() : constructor
+CrimeData(string) : constructor
+getXXX() : various
+ == : bool
+ &lt; : ostream
+ &lt; : bool
+ &gt; : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>333</x>
      <y>459</y>
      <w>216</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>List&lt;Type&gt;
--
#size : int
--
*List Structure methods*
getFromIndex(int) : Type
add(Type) : void
addAtIndex(int, Type) : void
remove(int) : Type

*ListAccessors*
getSize() : int
getFront() : LinearNode&lt;Type&gt;*
getend() : LinearNode&lt;Type&gt;*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>864</y>
      <w>171</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>LinearTester

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1062</x>
      <y>864</y>
      <w>171</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>TreeTester

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>990</y>
      <w>171</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>GraphTester

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1062</x>
      <y>990</y>
      <w>171</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>HashableTester

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>1116</y>
      <w>171</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>AlgorithmTester

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>333</x>
      <y>864</y>
      <w>549</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
Aggrigation
</panel_attributes>
    <additional_attributes>590.0;20.0;160.0;10.0;220.0;40.0;10.0;110.0;80.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>360</y>
      <w>207</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>DoubleNode &lt;Type&gt;
--
- nextNode : DN *
- prevNode : DN *
--
+ DN()
+ DN(Type)
+ DN (Type, DN, DN *)
+ get/set</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>171</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>774</x>
      <y>207</y>
      <w>261</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;270.0;170.0</additional_attributes>
  </element>
</diagram>
